/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import { useGLTF, useTexture } from "@react-three/drei";
import React, { useEffect } from "react";
import * as THREE from "three";
import { Text } from 'troika-three-text';
import { extend } from '@react-three/fiber';
extend({ Text });
import { Avatar } from './Avatar'; // Certifique-se de que o caminho est√° correto


export function Office(props) {
  const {section} = props;
    
  const { nodes, materials } = useGLTF("models/scene.glb");
  const texture = useTexture("textures/baked.jpg");
  texture.flipY = false;
  texture.encoding = THREE.sRGBEncoding;

  const officeBounds = {
    minX: -5,
    maxX: 5,
    minY: 0,
    maxY: 0,
    minZ: -5,
    maxZ: 5
};
  
return (
  <group {...props} dispose={null}>
                <Avatar sceneType="office" bounds={officeBounds} />

    <mesh
      castShadow
      receiveShadow
      geometry={nodes.base_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.tiles_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.chair_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.table_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Computer_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.TV_stand_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.TV_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.carpet_A_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.carpet_B_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.bed_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.dresser_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.bookShelf_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.NES_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.railing_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.stairs_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.wall_picture_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.ambient_occlusion_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.title_fireRed_material_0.geometry}
      material={materials.fireRed_material}
    />
  </group>
)
}

useGLTF.preload("models/scene.glb");



